#tgpt install..curl -sSL https://raw.githubusercontent.com/aandrew-me/tgpt/main/install | bash -s /usr/local/bin
1.
#!/bin/bash
backup_dir="$HOME/backup"
timestop=$(date +%F-%R)
if [ -d $backup_dir ]
then
echo "Directoria arsebobs"
else
mkdir -p $backup_dir
fi
sudo cp -r /usr "$backup_dir/$timestop"
sudo tar -czvf "$backup_dir/$timestop".tar.gz "$backup_dir/$timestop"

გამოვიდეთ სქრიპტიდან და შევიყვანოთ
crontab -e
მაგაში კი ჩავწეროთ
0 0 * * 0 sh /home/ge/script.sh      ჩავწეროთ ჩვენი სქრიპტის მისამართი რომელიც გაიშვება ყოველ კვირა 00:00 ზე


Line 1 - შებანგი (# !/bin/bash) მიუთითებს ბაშის მისამართს
Line 2 - სად უნდა გათავსდეს ასლი
Line 3 -  ახლანდელი დრო ეწეროს
Line 4 - თუ სადაც უნდა განთავსდეს ასლი არსებობს
Line 6- დაიპრინტოს რომ არსებს
Line 7- სხვა შემთხვევაში
Line 8- შევქმნათ ეს სადაც ასლი უნდა განთავსდეს
Line 10 - დავაკოპიროთ /usr და ჩავაკოპიროთ განსხვავებული სახელით
Line 11 -ვახდენთ არქივიზაციას და შეკუმშვას

2.
#!/bin/bash
echo "Romel Direqtoriashia faili"
read thedirectory
echo "Sheiyvanet failis saxeli"
read thename
if [ -f "$thedirectory/$thename" ];then
echo "Faili arsebobs"
else
echo "Faili ar arsebobs Sheiqmnas ? upasuxet yes or no"
read pasuxi
if [ "$pasuxi" = "yes" ];then
touch "$HOME/Documents/$thename"
echo "Sheiqmna"
fi
fi
Line 1 - შებანგი (# !/bin/bash) მიუთითებს ბაშის მისამართ
Line 2 -  დაპრინტოს თუ რომელ დირექტორიაში ეძებოს
Line 3 - დავიმახსოვროთ შეყვანილი ინფორმაცია ცვლადში
Line 4 - ახლა დავპრინტოთ თუ რა ქვია ფაილს
Line 5 - დავიმახსოვროთ შეყვანილი ინფორმაცია ცვლადში
Line 6 - სხვა შემთხვევაში ესეიგი არ არსებობს
Line 7 - დავპრინტოთ რომ არ არსებობს და თუ სურს შექმნა
Line 8 - დავიმახსოვროთ პასუხი ცვლადში
Line 9 - თუ პასუხი არის რომ უნდა შექმნა
Line 10 - მაშინ შევქმნათ Documents საქაღალდეში
Line 11 - დავპრინტოთ რომ შეიქმნა



3.
#!/bin/bash
source_dir="/home/giorgi/Documents"
if [ ! -d "$source_dir/DOCS" ]; then
    mkdir -p "$source_dir/DOCS"
fi
if [ ! -d "$source_dir/PHOTOS" ]; then
    mkdir -p "$source_dir/PHOTOS"
fi
if [ ! -d "$source_dir/MUSICS" ]; then
    mkdir -p "$source_dir/MUSICS"
fi
if [ ! -d "$source_dir/VIDEOS" ]; then
    mkdir -p "$source_dir/VIDEOS"
fi
find "$source_dir" -type f -name "*.png" -exec mv {} "$source_dir/PHOTOS/" \;
find "$source_dir" -type f -name "*.txt" -exec mv {} "$source_dir/DOCS/" \;
find "$source_dir" -type f -name "*.mp3" -exec mv {} "$source_dir/MUSICS/" \;
find "$source_dir" -type f -name "*.avi" -exec mv {} "$source_dir/VIDEOS/" \;
echo "NACNOBI FAILI AR ARIS $(find "$source_dir" -maxdepth 1 -type f  -print)";

Line 1 - შებანგი (# !/bin/bash) მიუთითებს ბაშის მისამართ
Line 2 - მისამართი სადაც უნდა დავახარისხოთ ფაილები
Line 3 დან Line 12 მდე-ვამოწმებთ თუ არსებობს DOCS , PHOTOS ,MUSICS ,VIDEOS თუ არსებობს ვქმნით

Line 13 - ვპოულობთ იმ დირექტორიაში ყველა png ფაილს და გადაქვაქვს PHOTOS დირექტორიაში
Line 14 - ვპოულობთ იმ დირექტორიაში ყველა txt ფაილს და გადაქვაქვს DOCS დირექტორიაში
Line 15 - ვპოულობთ იმ დირექტორიაში ყველა mp3 ფაილს და გადაქვაქვს MUSICS დირექტორიაში
Line 16 - ვპოულობთ იმ დირექტორიაში ყველა avi ფაილს და გადაქვაქვს VIDEOS დირექტორიაში
Line 17 -  ვპოულობთ იმ დირექტორიაში ყველა ფაილს რომელიც დარჩა გადარჩევის შემდეგ ესეიგი უცხო ფაილებს.-maxdepth 1 ნიშნავს რომ მარტო მანდ მოვძებნოთ და არა ქვედირექტორიებშიც


4.

#!/bin/bash
lsb_release -a
mkdir $HOME/Specil
sudo apt update > "$HOME/Specil/Eupdate_log.log" 2>&1
sudo apt upgrade -y >> "$HOME/Specil/update_log.log" 2>&1
if [ $? -eq 0 ]; then
echo "Update complete"
else
echo "Update failed. Check update_log.log for details." >&2
fi

Line 1 - შებანგი (# !/bin/bash) მიუთითებს ბაშის მისამართს
Line 2 - დაპრინტავს ლინუქსის დისტრუბიიცის ვერსიას
LIne 3 - შექმნის სპეციალურ დირექტორიას
LIne 4 -გადაამისამართებს უპდათის ინპუთს update_log.log
Line 5 -დაამატებს update_log.log და განახლებას იზავს upgrade
Line 6- შეამოწმებს თუ წარმატებით ქნა update
Line 7- დაპრინტავს რომ წარმატებით ქნა
Line 8-თუ არ ქნა წარმატებით
Line 9- დაპრინტავს რომ არ ქნა წარმატებით
